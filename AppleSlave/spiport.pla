//
// BIT BANGED SPI OVER GAMEPORT
//
BYTE[] SPIXFER
BYTE[] = $8D, $5A, $C0 // STA $C05A   ENABLE SLAVE
BYTE[] = $A0, $00      // LDY #0      ASSUME MSB IS ZERO
BYTE[] = $B5, $C0      // LDA $C0,X   GET ARGUMENT
BYTE[] = $10, $01      // BPL +01     CHECK MSB
BYTE[] = $C8           // INY         IT'S A ONE
BYTE[] = $99, $58, $C0 // STA $C058,Y WRITE BIT 7
BYTE[] = $8D, $40, $C0 // STA $C040   CLOCK
BYTE[] = $A0, $00      // LDY #0      DOING THIS HERE GIVES TIME FOR OUTPUT TO BECOME STABLE
BYTE[] = $0E, $61, $C0 // ASL $C061   READ BIT 7 INTO CARRY
BYTE[] = $2A           // ROL         ROTATE INTO ACC
BYTE[] = $10, $01      // BPL +01     REPEAT FOR ALL BITS
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $A0, $00      // LDY #0
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $2A           // ROL
BYTE[] = $10, $01      // BPL +01
BYTE[] = $C8           // INY
BYTE[] = $99, $58, $C0 // STA $C058,Y
BYTE[] = $8D, $40, $C0 // STA $C040
BYTE[] = $EA           // NOP
BYTE[] = $0E, $61, $C0 // ASL $C061
BYTE[] = $8D, $5B, $C0 // STA $C05B     DISABLE SLAVE
BYTE[] = $2A           // ROL
BYTE[] = $95, $C0      // STA $C0,X     SAVE RETURN PARAMETER
BYTE[] = $60           // RTS

BYTE SPIDATA

DEF SPIRESET
  RETURN ^$C05B
END

SPIRESET
REPEAT
  IF ^$C000 > 127
    ^$C010
    SPIDATA = ^$C000
    PUTC((@SPIXFER)(SPIDATA))
  FIN
UNTIL SPIDATA == 27
^$C010
